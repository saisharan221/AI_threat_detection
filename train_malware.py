# scripts/train_malware.py
import pandas as pd
import argparse
import joblib
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--input", type=str, default="data/malware/processed_malware_data.csv", help="Path to processed data")
    parser.add_argument("--model_output", type=str, default="models/malware_model.pkl", help="Path to save the trained model")
    args = parser.parse_args()

    df = pd.read_csv(args.input)
    # Assume 'label' is the target and the rest are features
    X = df.drop(columns=['label', 'file_path'])
    y = df['label']

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    model = RandomForestClassifier(n_estimators=100, random_state=42)
    model.fit(X_train, y_train)

    joblib.dump(model, args.model_output)
    print(f"Model saved to {args.model_output}")
    print(f"Training Accuracy: {model.score(X_train, y_train):.2f}")
    print(f"Test Accuracy: {model.score(X_test, y_test):.2f}")
